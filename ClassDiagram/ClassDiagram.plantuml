@startuml Simlation Class Diagram
class Simulation
{
    public static void main(String[] args)
}
abstract Plane
{
    # boolean isReloaded
    # boolean isVisible

    + Plane(Coordinate position, Direction front)
    + Direction getFront()
    + boolean getVisibilityStatus()
    + void changeVisibilityStatus(boolean isVisible)
    + void destroy()
    + void loadAmmunition()
    + Direction scan()
}
interface Flying
{
    + void move()
}
abstract FlyingObject
{
    # Coordinate position;
    # Direction front;

    + Coordinate getPosition()
    + Direction getFront()
}
class Cloud
{
    - static final Dirction windFront
    
    + Cloud(Coordinate position)
    + void hide(Plane plane)
}
class Bullet
{
    - Plane owner
    + Bullet(Plane owner)
    + Plane getOwner()
}
class RedPlane
{
    - static Statistics statistics

    + RedPlane(Coordinate position, Direction front)
    + static Statistics getStatistics()
}
class BluePlane
{

    - static Statistics statistics

    + BluePlane(Coordinate position, Direction front)
    + static Statistics getStatistics()
}
class CollisionManager
{
    - static ArrayList<Coordinate> findFieldsToClear(ArrayList<FlyingObject> flyingObjects)

    + static void destoryCollapsedFlyingObjects(ArrayList<FlyingObject> flyingObjects)

}
class DirectionManager
{
    + static Direction randDirection()
}
class MotionManager
{
    + static void moveFlyingObjects(ArrayList<FlyingObject> flyingObjects)
}
class ShootingManager
{
    - ArrayList<Plane> findReadyToFire(ArrayList<Plane> planes)
    + ArrayList<Bullet> fire(ArrayList<Plane> planes)
}
class SimulationManager
{
    - ArrayList<RedPlane> redTeam
    - ArrayList<BluePlane> blueTeam
    - ArrayList<Cloud> clouds
    - ArrayList<Bullet> bullets
    - int mapWidth
    - int mapHeight

    + SimulationManager(int teamsAbundance, int mapWidht, int mapHeight)
    + boolean round()
}
class VisibilityManager
{
    + static void hidePlanes(ArrayList<Plane> planes, ArrayList<Cloud> clouds)
}
class Menu
{
    + Menu()
}
class Coordinate
{
    - int x
    - int y

    + Coordinate(int x, int y)
    + Coordinate(Coordinate coordinate)
    + int getX()
    + int getY()
}
enum Direction
{
    LEFT
    LEFT_UP
    LEFT_DOWN
    RIGHT
    RIGHT_DOWN
    RIGHT_UP
    DOWN
    UP
    ERROR
}
class Statistics
{
    - int kills
    - int alive

    + Statistics(int alive)
    + void addKill()
    + void addAlive()
    + void subAlive()
}

Flying <|.. FlyingObject
FlyingObject <|-- Bullet
FlyingObject <|-- Cloud
FlyingObject <|-- Plane
Plane <|-- RedPlane
Plane <|-- BluePlane
RedPlane *-- Statistics
BluePlane *-- Statistics
SimulationManager *-- RedPlane
SimulationManager *-- BluePlane
SimulationManager *-- Bullet
SimulationManager *-- Cloud
FlyingObject *-- Coordinate
FlyingObject *-- Direction
SimulationManager <-- DirectionManager
SimulationManager <-- CollisionManager
SimulationManager <-- MotionManager
SimulationManager <-- VisibilityManager
SimulationManager <-- ShootingManager
Menu <-- SimulationManager
Simulation <-- Menu
Cloud <-- DirectionManager

@enduml